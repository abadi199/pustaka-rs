trigger:
  branches:
    include: ["*"]
  tags:
    include: ["*"]

jobs:
  - template: _build/azure-pipelines-template.yml
    parameters:
      name: macOS
      displayName: macOS SQLite
      vmImage: macOS-10.13
      variables:
        BACKEND: sqlite
      setup:
        - bash: |
            brew update &&
            brew install sqlite
          displayName: Install sqlite
  - template: _build/azure-pipelines-template.yml
    parameters:
      name: Linux
      displayName: Linux SQLite
      vmImage: ubuntu-16.04
      variables:
        BACKEND: sqlite
      setup:
        - bash: |
            sudo apt-get update &&
            sudo apt-get -y install sqlite3 libsqlite3-dev
          displayName: Install sqlite
  - template: _build/azure-pipelines-template.yml
    parameters:
      name: Windows
      displayName: Windows SQLite
      vmImage: vs2017-win2016
      variables:
        BACKEND: sqlite
        SQLITE3_LIB_DIR: C:\sqlite
      setup:
        - script: |
            choco install 7zip
            mkdir C:\sqlite
            CD /D C:\sqlite
            curl -fsS --retry 3 --retry-connrefused -o sqlite3.zip https://sqlite.org/2017/sqlite-dll-win64-x64-3160200.zip
            7z e sqlite3.zip -y
            call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
            lib /machine:x64 /def:sqlite3.def /out:sqlite3.lib
            set PATH=%PATH%;C:\sqlite
            echo "##vso[task.setvariable variable=PATH;]%PATH%;C:\sqlite"
          displayName: Install sqlite
