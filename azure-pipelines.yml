strategy:
  matrix:
    windows-stable:
      imageName: "vs2017-win2016"
      rustup_toolchain: stable
    mac-stable:
      imageName: "macos-10.13"
      rustup_toolchain: stable
    linux-stable:
      imageName: "ubuntu-16.04"
      rustup_toolchain: stable
pool:
  vmImage: $(imageName)

steps:
  - script: |
      choco install 7zip
      mkdir C:\sqlite
      CD /D C:\sqlite
      curl -fsS --retry 3 --retry-connrefused -o sqlite3.zip https://sqlite.org/2017/sqlite-dll-win64-x64-3160200.zip
      7z e sqlite3.zip -y
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      lib /machine:x64 /def:sqlite3.def /out:sqlite3.lib
      set PATH=%PATH%;C:\sqlite
      echo "##vso[task.setvariable variable=PATH;]%PATH%;C:\sqlite"
    displayName: Windows install sqlite3
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: sudo apt-get install -y libsqlite3-dev
    displayName: Linux install sqlite3
    condition: eq( variables['Agent.OS'], 'Linux' )
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: npm run prod:rust
